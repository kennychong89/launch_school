# Introduction To Programming - Hashes
# Launch School
# Kenny Chong
# 4/18/2016

1. Given a hash of family members, with keys as title and an array of names
as the values, use Ruby's built-in select method to gather only immediate family
members' names into a new array.

family = {  uncles: ["bob", "joe", "steve"],
            sisters: ["jane", "jill", "beth"],
            brothers: ["frank","rob","david"],
            aunts: ["mary","sally","susan"]
          }

Solution: family.select do |k,v|
            k == :sisters || k == :brothers
          end.values.flatten

2. Look at Ruby's merge method. Notice that it has two versions. 
What is the difference between merge and merge!? Write a program that uses both and illustrate the differences.
Solution: merge merges two hashes together but creates a new hash. merge! does same thing but it modifies the calling
          hash with the merges.


3. Using some of Ruby's built-in Hash methods, write a program that loops through a hash and prints all of the keys. Then write a program that does the same thing except printing the values. Finally, write a program that prints both.
name_and_age = {"Jordan" => 42,
                "Sam" => 65,
                "Amy" => 21}

Solution: name_and_age.keys.each { |k| puts k }
          name_and_age.values.each { |v| puts v }
          name_and_age.each { |k,v| puts "..."}


4. Given the following expression, how would you access the name of the person?
person = {name: 'Bob', occupation: 'web developer', hobbies: 'painting'}

Solution: person[:name] # Bob

5. What method could you use to find out if a Hash contains a specific value in it? Write a program to demonstrate this use.
Solution: has_value?(value_argument)

6.Given the array...

  words =  ['demo', 'none', 'tied', 'evil', 'dome', 'mode', 'live',
          'fowl', 'veil', 'wolf', 'diet', 'vile', 'edit', 'tide',
          'flow', 'neon']

  Write a program that prints out groups of words that are anagrams. Anagrams are words that have the same exact letters in them but in a different order. Your output should look something like this:

  ["demo", "dome", "mode"]
  ["neon", "none"]
  (etc)

Solution: 
def create_anagrams(words)
  anagrams = {}
  words.each do |string|
      key = string.split('').sort.join
      if anagrams.has_key?(key)
        anagrams[key].push(string)
      else
        anagrams[key] = [string]
      end
  end
  anagrams
end

words =  ['demo', 'none', 'tied', 'evil', 'dome', 'mode', 'live',
          'fowl', 'veil', 'wolf', 'diet', 'vile', 'edit', 'tide',
          'flow', 'neon']

anagrams = create_anagrams(words)
anagrams.values.each { |v| puts "#{v}"}

7. Given the following code..

x = "hi there"
my_hash = {x: "some value"}
my_hash2 = {x => "some value"}

What's the difference between the two hashes that were created?
Solution: x: is symbol. x uses the local variable.

8. If you see this error, what do you suspect is the most likely problem?

NoMethodError: undefined method `keys' for Array

Solution: B. There is no method called keys for Array objects.